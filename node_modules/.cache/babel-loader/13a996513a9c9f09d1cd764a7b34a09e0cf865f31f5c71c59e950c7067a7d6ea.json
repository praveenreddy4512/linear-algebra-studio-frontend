{"ast":null,"code":"import React from'react';import'./ResultDisplay.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultDisplay=_ref=>{let{result,operation,isLoading,error}=_ref;const formatMatrix=matrix=>{if(!matrix||!Array.isArray(matrix))return'Invalid matrix';return matrix.map((row,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"matrix-row\",children:row.map((cell,cellIndex)=>/*#__PURE__*/_jsx(\"span\",{className:\"matrix-cell\",children:typeof cell==='number'?cell.toFixed(3):cell},cellIndex))},index));};const formatNumber=num=>{if(typeof num==='number'){return num.toFixed(6);}return num;};const renderResult=()=>{if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"Computing SVD Decomposition...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-subtext\",children:\"Breaking down the matrix into U, \\u03A3, and V components\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"error-help\",children:\"Please check your input and try again\"})]});}if(!result){return null;}// Handle different result types\nif(operation==='eigenvalues'){return/*#__PURE__*/_jsxs(\"div\",{className:\"eigen-result\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Eigenvalues:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"eigenvalues\",children:result.eigenvalues.map((val,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"eigenvalue\",children:[\"\\u03BB\",index+1,\" = \",formatNumber(val)]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Eigenvectors:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"eigenvectors\",children:result.eigenvectors.map((vec,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"eigenvector\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"eigenvector-label\",children:[\"v\",index+1,\":\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"eigenvector-matrix\",children:formatMatrix([vec])})]},index))})]})]});}if(operation==='svd'){return/*#__PURE__*/_jsxs(\"div\",{className:\"svd-result\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"U Matrix:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"matrix-display\",children:formatMatrix(result.U)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u03A3 (Singular Values):\"}),/*#__PURE__*/_jsx(\"div\",{className:\"singular-values\",children:result.S.map((val,index)=>/*#__PURE__*/_jsxs(\"span\",{className:\"singular-value\",children:[\"\\u03C3\",index+1,\" = \",formatNumber(val)]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"V Matrix:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"matrix-display\",children:formatMatrix(result.V)})]})]});}// Default matrix result\nif(Array.isArray(result)){return/*#__PURE__*/_jsx(\"div\",{className:\"matrix-result\",children:/*#__PURE__*/_jsx(\"div\",{className:\"matrix-display\",children:formatMatrix(result)})});}// Single number result\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"number-result\",children:/*#__PURE__*/_jsx(\"span\",{className:\"result-value\",children:formatNumber(result)})});};return/*#__PURE__*/_jsx(\"div\",{className:\"result-display\",children:renderResult()});};export default ResultDisplay;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ResultDisplay","_ref","result","operation","isLoading","error","formatMatrix","matrix","Array","isArray","map","row","index","className","children","cell","cellIndex","toFixed","formatNumber","num","renderResult","eigenvalues","val","eigenvectors","vec","U","S","V"],"sources":["/Users/saipraveenreddykolli/Desktop/lab2/linear-algebra-studio-frontend/src/components/ResultDisplay.js"],"sourcesContent":["import React from 'react';\nimport './ResultDisplay.css';\n\nconst ResultDisplay = ({ result, operation, isLoading, error }) => {\n  const formatMatrix = (matrix) => {\n    if (!matrix || !Array.isArray(matrix)) return 'Invalid matrix';\n    \n    return matrix.map((row, index) => (\n      <div key={index} className=\"matrix-row\">\n        {row.map((cell, cellIndex) => (\n          <span key={cellIndex} className=\"matrix-cell\">\n            {typeof cell === 'number' ? cell.toFixed(3) : cell}\n          </span>\n        ))}\n      </div>\n    ));\n  };\n\n  const formatNumber = (num) => {\n    if (typeof num === 'number') {\n      return num.toFixed(6);\n    }\n    return num;\n  };\n\n  const renderResult = () => {\n    if (isLoading) {\n      return (\n        <div className=\"loading\">\n          <div className=\"loading-spinner\"></div>\n          <div className=\"loading-text\">Computing SVD Decomposition...</div>\n          <div className=\"loading-subtext\">Breaking down the matrix into U, Σ, and V components</div>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className=\"error\">\n          <div className=\"error-icon\">⚠️</div>\n          <div className=\"error-message\">{error}</div>\n          <div className=\"error-help\">Please check your input and try again</div>\n        </div>\n      );\n    }\n\n    if (!result) {\n      return null;\n    }\n\n    // Handle different result types\n    if (operation === 'eigenvalues') {\n      return (\n        <div className=\"eigen-result\">\n          <div className=\"result-section\">\n            <h4>Eigenvalues:</h4>\n            <div className=\"eigenvalues\">\n              {result.eigenvalues.map((val, index) => (\n                <div key={index} className=\"eigenvalue\">\n                  λ{index + 1} = {formatNumber(val)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"result-section\">\n            <h4>Eigenvectors:</h4>\n            <div className=\"eigenvectors\">\n              {result.eigenvectors.map((vec, index) => (\n                <div key={index} className=\"eigenvector\">\n                  <div className=\"eigenvector-label\">v{index + 1}:</div>\n                  <div className=\"eigenvector-matrix\">\n                    {formatMatrix([vec])}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (operation === 'svd') {\n      return (\n        <div className=\"svd-result\">\n          <div className=\"result-section\">\n            <h4>U Matrix:</h4>\n            <div className=\"matrix-display\">\n              {formatMatrix(result.U)}\n            </div>\n          </div>\n          <div className=\"result-section\">\n            <h4>Σ (Singular Values):</h4>\n            <div className=\"singular-values\">\n              {result.S.map((val, index) => (\n                <span key={index} className=\"singular-value\">\n                  σ{index + 1} = {formatNumber(val)}\n                </span>\n              ))}\n            </div>\n          </div>\n          <div className=\"result-section\">\n            <h4>V Matrix:</h4>\n            <div className=\"matrix-display\">\n              {formatMatrix(result.V)}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // Default matrix result\n    if (Array.isArray(result)) {\n      return (\n        <div className=\"matrix-result\">\n          <div className=\"matrix-display\">\n            {formatMatrix(result)}\n          </div>\n        </div>\n      );\n    }\n\n    // Single number result\n    return (\n      <div className=\"number-result\">\n        <span className=\"result-value\">{formatNumber(result)}</span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"result-display\">\n      {renderResult()}\n    </div>\n  );\n};\n\nexport default ResultDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}