{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./Visualizer2D.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Visualizer2D=_ref=>{let{matrix,showEigenvectors=true}=_ref;const svgRef=useRef(null);const[dimensions,setDimensions]=useState({width:600,height:400});const[animationStep,setAnimationStep]=useState(0);useEffect(()=>{const updateDimensions=()=>{var _svgRef$current;const container=(_svgRef$current=svgRef.current)===null||_svgRef$current===void 0?void 0:_svgRef$current.parentElement;const fallbackWidth=Math.min(window.innerWidth-60,800);const width=Math.max(320,((container===null||container===void 0?void 0:container.offsetWidth)||fallbackWidth)-40);const height=400;// fixed height for consistent layout\nsetDimensions({width,height});};updateDimensions();window.addEventListener('resize',updateDimensions);return()=>window.removeEventListener('resize',updateDimensions);},[]);useEffect(()=>{if(matrix&&matrix.length===2&&matrix[0].length===2){setAnimationStep(0);const timer=setTimeout(()=>setAnimationStep(1),100);return()=>clearTimeout(timer);}},[matrix]);const renderGrid=()=>{const{width,height}=dimensions;const centerX=width/2;const centerY=height/2;const gridSize=20;const gridExtent=Math.min(width,height)/2-20;const lines=[];// Vertical lines\nfor(let i=-Math.floor(gridExtent/gridSize);i<=Math.floor(gridExtent/gridSize);i++){const x=centerX+i*gridSize;if(x>=0&&x<=width){lines.push(/*#__PURE__*/_jsx(\"line\",{x1:x,y1:centerY-gridExtent,x2:x,y2:centerY+gridExtent,stroke:\"#e0e0e0\",strokeWidth:i===0?2:1},\"v-\".concat(i)));}}// Horizontal lines\nfor(let i=-Math.floor(gridExtent/gridSize);i<=Math.floor(gridExtent/gridSize);i++){const y=centerY+i*gridSize;if(y>=0&&y<=height){lines.push(/*#__PURE__*/_jsx(\"line\",{x1:centerX-gridExtent,y1:y,x2:centerX+gridExtent,y2:y,stroke:\"#e0e0e0\",strokeWidth:i===0?2:1},\"h-\".concat(i)));}}return lines;};const renderVectors=()=>{const{width,height}=dimensions;const centerX=width/2;const centerY=height/2;const scale=30;const vectors=[];// Original basis vectors\nvectors.push(/*#__PURE__*/_jsx(\"line\",{x1:centerX,y1:centerY,x2:centerX+scale,y2:centerY,stroke:\"#007bff\",strokeWidth:\"3\",strokeLinecap:\"round\",className:\"vector-i\"},\"i-original\"));vectors.push(/*#__PURE__*/_jsx(\"line\",{x1:centerX,y1:centerY,x2:centerX,y2:centerY-scale,stroke:\"#dc3545\",strokeWidth:\"3\",strokeLinecap:\"round\",className:\"vector-j\"},\"j-original\"));// Labels for original vectors\nvectors.push(/*#__PURE__*/_jsx(\"text\",{x:centerX+scale+5,y:centerY+5,fontSize:\"12\",fill:\"#007bff\",fontWeight:\"bold\",children:\"i\\u0302\"},\"i-label\"));vectors.push(/*#__PURE__*/_jsx(\"text\",{x:centerX+5,y:centerY-scale-5,fontSize:\"12\",fill:\"#dc3545\",fontWeight:\"bold\",children:\"\\u0135\"},\"j-label\"));// Transformed vectors if matrix is provided\nif(matrix&&matrix.length===2&&matrix[0].length===2){const transformedI=[matrix[0][0],matrix[1][0]];const transformedJ=[matrix[0][1],matrix[1][1]];vectors.push(/*#__PURE__*/_jsx(\"line\",{x1:centerX,y1:centerY,x2:centerX+transformedI[0]*scale,y2:centerY-transformedI[1]*scale,stroke:\"#28a745\",strokeWidth:\"3\",strokeLinecap:\"round\",strokeDasharray:\"5,5\",className:\"vector-transformed\"},\"i-transformed\"));vectors.push(/*#__PURE__*/_jsx(\"line\",{x1:centerX,y1:centerY,x2:centerX+transformedJ[0]*scale,y2:centerY-transformedJ[1]*scale,stroke:\"#28a745\",strokeWidth:\"3\",strokeLinecap:\"round\",strokeDasharray:\"5,5\",className:\"vector-transformed\"},\"j-transformed\"));// Labels for transformed vectors\nvectors.push(/*#__PURE__*/_jsx(\"text\",{x:centerX+transformedI[0]*scale+5,y:centerY-transformedI[1]*scale+5,fontSize:\"12\",fill:\"#28a745\",fontWeight:\"bold\",children:\"i\\u0302'\"},\"i-transformed-label\"));vectors.push(/*#__PURE__*/_jsx(\"text\",{x:centerX+transformedJ[0]*scale+5,y:centerY-transformedJ[1]*scale+5,fontSize:\"12\",fill:\"#28a745\",fontWeight:\"bold\",children:\"\\u0135'\"},\"j-transformed-label\"));}return vectors;};const renderUnitSquare=()=>{const{width,height}=dimensions;const centerX=width/2;const centerY=height/2;const scale=30;const squares=[];// Original unit square\nsquares.push(/*#__PURE__*/_jsx(\"rect\",{x:centerX,y:centerY-scale,width:scale,height:scale,fill:\"rgba(0,123,255,0.1)\",stroke:\"#007bff\",strokeWidth:\"2\",className:\"unit-square\"},\"unit-square\"));// Transformed unit square if matrix is provided\nif(matrix&&matrix.length===2&&matrix[0].length===2){const transformedI=[matrix[0][0],matrix[1][0]];const transformedJ=[matrix[0][1],matrix[1][1]];// Calculate transformed square vertices\nconst p1=[centerX,centerY];const p2=[centerX+transformedI[0]*scale,centerY-transformedI[1]*scale];const p3=[centerX+transformedI[0]*scale+transformedJ[0]*scale,centerY-transformedI[1]*scale-transformedJ[1]*scale];const p4=[centerX+transformedJ[0]*scale,centerY-transformedJ[1]*scale];squares.push(/*#__PURE__*/_jsx(\"polygon\",{points:\"\".concat(p1[0],\",\").concat(p1[1],\" \").concat(p2[0],\",\").concat(p2[1],\" \").concat(p3[0],\",\").concat(p3[1],\" \").concat(p4[0],\",\").concat(p4[1]),fill:\"rgba(40,167,69,0.1)\",stroke:\"#28a745\",strokeWidth:\"2\",className:\"unit-square-transformed\"},\"transformed-square\"));}return squares;};const renderEigenvectors=()=>{if(!showEigenvectors||!matrix||matrix.length!==2||matrix[0].length!==2){return null;}// Calculate eigenvalues and eigenvectors\nconst a=matrix[0][0];const b=matrix[0][1];const c=matrix[1][0];const d=matrix[1][1];const trace=a+d;const det=a*d-b*c;const discriminant=trace*trace-4*det;if(discriminant<0){return null;// Complex eigenvalues\n}const lambda1=(trace+Math.sqrt(discriminant))/2;const lambda2=(trace-Math.sqrt(discriminant))/2;// Calculate eigenvectors\nconst eigenvectors=[];const{width,height}=dimensions;const centerX=width/2;const centerY=height/2;const scale=30;// For each eigenvalue, find a corresponding eigenvector\n[lambda1,lambda2].forEach((lambda,index)=>{let vx,vy;if(Math.abs(b)>1e-10){vx=1;vy=(lambda-a)/b;}else if(Math.abs(c)>1e-10){vy=1;vx=(lambda-d)/c;}else{vx=1;vy=0;}// Normalize the vector\nconst length=Math.sqrt(vx*vx+vy*vy);vx/=length;vy/=length;eigenvectors.push(/*#__PURE__*/_jsx(\"line\",{x1:centerX,y1:centerY,x2:centerX+vx*scale*2,y2:centerY-vy*scale*2,stroke:\"#ffc107\",strokeWidth:\"4\",strokeLinecap:\"round\",className:\"eigenvector\"},\"eigenvector-\".concat(index)));eigenvectors.push(/*#__PURE__*/_jsxs(\"text\",{x:centerX+vx*scale*2+5,y:centerY-vy*scale*2+5,fontSize:\"12\",fill:\"#ffc107\",fontWeight:\"bold\",children:[\"\\u03BB\",index+1,\" = \",lambda.toFixed(2)]},\"eigenvector-label-\".concat(index)));});return eigenvectors;};return/*#__PURE__*/_jsx(\"div\",{className:\"visualizer-2d\",children:/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,width:dimensions.width,height:dimensions.height,viewBox:\"0 0 \".concat(dimensions.width,\" \").concat(dimensions.height),className:\"coordinate-grid\",children:[renderGrid(),renderUnitSquare(),renderVectors(),renderEigenvectors()]})});};export default Visualizer2D;","map":{"version":3,"names":["React","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","Visualizer2D","_ref","matrix","showEigenvectors","svgRef","dimensions","setDimensions","width","height","animationStep","setAnimationStep","updateDimensions","_svgRef$current","container","current","parentElement","fallbackWidth","Math","min","window","innerWidth","max","offsetWidth","addEventListener","removeEventListener","length","timer","setTimeout","clearTimeout","renderGrid","centerX","centerY","gridSize","gridExtent","lines","i","floor","x","push","x1","y1","x2","y2","stroke","strokeWidth","concat","y","renderVectors","scale","vectors","strokeLinecap","className","fontSize","fill","fontWeight","children","transformedI","transformedJ","strokeDasharray","renderUnitSquare","squares","p1","p2","p3","p4","points","renderEigenvectors","a","b","c","d","trace","det","discriminant","lambda1","sqrt","lambda2","eigenvectors","forEach","lambda","index","vx","vy","abs","toFixed","ref","viewBox"],"sources":["/Users/saipraveenreddykolli/Desktop/lab2/linear-algebra-studio-frontend/src/components/Visualizer2D.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Visualizer2D.css';\n\nconst Visualizer2D = ({ matrix, showEigenvectors = true }) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 600, height: 400 });\n  const [animationStep, setAnimationStep] = useState(0);\n\n  useEffect(() => {\n    const updateDimensions = () => {\n      const container = svgRef.current?.parentElement;\n      const fallbackWidth = Math.min(window.innerWidth - 60, 800);\n      const width = Math.max(320, (container?.offsetWidth || fallbackWidth) - 40);\n      const height = 400; // fixed height for consistent layout\n      setDimensions({ width, height });\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  useEffect(() => {\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      setAnimationStep(0);\n      const timer = setTimeout(() => setAnimationStep(1), 100);\n      return () => clearTimeout(timer);\n    }\n  }, [matrix]);\n\n  const renderGrid = () => {\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const gridSize = 20;\n    const gridExtent = Math.min(width, height) / 2 - 20;\n\n    const lines = [];\n    \n    // Vertical lines\n    for (let i = -Math.floor(gridExtent / gridSize); i <= Math.floor(gridExtent / gridSize); i++) {\n      const x = centerX + i * gridSize;\n      if (x >= 0 && x <= width) {\n        lines.push(\n          <line\n            key={`v-${i}`}\n            x1={x}\n            y1={centerY - gridExtent}\n            x2={x}\n            y2={centerY + gridExtent}\n            stroke=\"#e0e0e0\"\n            strokeWidth={i === 0 ? 2 : 1}\n          />\n        );\n      }\n    }\n\n    // Horizontal lines\n    for (let i = -Math.floor(gridExtent / gridSize); i <= Math.floor(gridExtent / gridSize); i++) {\n      const y = centerY + i * gridSize;\n      if (y >= 0 && y <= height) {\n        lines.push(\n          <line\n            key={`h-${i}`}\n            x1={centerX - gridExtent}\n            y1={y}\n            x2={centerX + gridExtent}\n            y2={y}\n            stroke=\"#e0e0e0\"\n            strokeWidth={i === 0 ? 2 : 1}\n          />\n        );\n      }\n    }\n\n    return lines;\n  };\n\n  const renderVectors = () => {\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    const vectors = [];\n\n    // Original basis vectors\n    vectors.push(\n      <line\n        key=\"i-original\"\n        x1={centerX}\n        y1={centerY}\n        x2={centerX + scale}\n        y2={centerY}\n        stroke=\"#007bff\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        className=\"vector-i\"\n      />\n    );\n    vectors.push(\n      <line\n        key=\"j-original\"\n        x1={centerX}\n        y1={centerY}\n        x2={centerX}\n        y2={centerY - scale}\n        stroke=\"#dc3545\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        className=\"vector-j\"\n      />\n    );\n\n    // Labels for original vectors\n    vectors.push(\n      <text\n        key=\"i-label\"\n        x={centerX + scale + 5}\n        y={centerY + 5}\n        fontSize=\"12\"\n        fill=\"#007bff\"\n        fontWeight=\"bold\"\n      >\n        î\n      </text>\n    );\n    vectors.push(\n      <text\n        key=\"j-label\"\n        x={centerX + 5}\n        y={centerY - scale - 5}\n        fontSize=\"12\"\n        fill=\"#dc3545\"\n        fontWeight=\"bold\"\n      >\n        ĵ\n      </text>\n    );\n\n    // Transformed vectors if matrix is provided\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      const transformedI = [matrix[0][0], matrix[1][0]];\n      const transformedJ = [matrix[0][1], matrix[1][1]];\n\n      vectors.push(\n        <line\n          key=\"i-transformed\"\n          x1={centerX}\n          y1={centerY}\n          x2={centerX + transformedI[0] * scale}\n          y2={centerY - transformedI[1] * scale}\n          stroke=\"#28a745\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          strokeDasharray=\"5,5\"\n          className=\"vector-transformed\"\n        />\n      );\n      vectors.push(\n        <line\n          key=\"j-transformed\"\n          x1={centerX}\n          y1={centerY}\n          x2={centerX + transformedJ[0] * scale}\n          y2={centerY - transformedJ[1] * scale}\n          stroke=\"#28a745\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          strokeDasharray=\"5,5\"\n          className=\"vector-transformed\"\n        />\n      );\n\n      // Labels for transformed vectors\n      vectors.push(\n        <text\n          key=\"i-transformed-label\"\n          x={centerX + transformedI[0] * scale + 5}\n          y={centerY - transformedI[1] * scale + 5}\n          fontSize=\"12\"\n          fill=\"#28a745\"\n          fontWeight=\"bold\"\n        >\n          î'\n        </text>\n      );\n      vectors.push(\n        <text\n          key=\"j-transformed-label\"\n          x={centerX + transformedJ[0] * scale + 5}\n          y={centerY - transformedJ[1] * scale + 5}\n          fontSize=\"12\"\n          fill=\"#28a745\"\n          fontWeight=\"bold\"\n        >\n          ĵ'\n        </text>\n      );\n    }\n\n    return vectors;\n  };\n\n  const renderUnitSquare = () => {\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    const squares = [];\n\n    // Original unit square\n    squares.push(\n      <rect\n        key=\"unit-square\"\n        x={centerX}\n        y={centerY - scale}\n        width={scale}\n        height={scale}\n        fill=\"rgba(0,123,255,0.1)\"\n        stroke=\"#007bff\"\n        strokeWidth=\"2\"\n        className=\"unit-square\"\n      />\n    );\n\n    // Transformed unit square if matrix is provided\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      const transformedI = [matrix[0][0], matrix[1][0]];\n      const transformedJ = [matrix[0][1], matrix[1][1]];\n\n      // Calculate transformed square vertices\n      const p1 = [centerX, centerY];\n      const p2 = [centerX + transformedI[0] * scale, centerY - transformedI[1] * scale];\n      const p3 = [centerX + transformedI[0] * scale + transformedJ[0] * scale, \n                  centerY - transformedI[1] * scale - transformedJ[1] * scale];\n      const p4 = [centerX + transformedJ[0] * scale, centerY - transformedJ[1] * scale];\n\n      squares.push(\n        <polygon\n          key=\"transformed-square\"\n          points={`${p1[0]},${p1[1]} ${p2[0]},${p2[1]} ${p3[0]},${p3[1]} ${p4[0]},${p4[1]}`}\n          fill=\"rgba(40,167,69,0.1)\"\n          stroke=\"#28a745\"\n          strokeWidth=\"2\"\n          className=\"unit-square-transformed\"\n        />\n      );\n    }\n\n    return squares;\n  };\n\n  const renderEigenvectors = () => {\n    if (!showEigenvectors || !matrix || matrix.length !== 2 || matrix[0].length !== 2) {\n      return null;\n    }\n\n    // Calculate eigenvalues and eigenvectors\n    const a = matrix[0][0];\n    const b = matrix[0][1];\n    const c = matrix[1][0];\n    const d = matrix[1][1];\n\n    const trace = a + d;\n    const det = a * d - b * c;\n    const discriminant = trace * trace - 4 * det;\n\n    if (discriminant < 0) {\n      return null; // Complex eigenvalues\n    }\n\n    const lambda1 = (trace + Math.sqrt(discriminant)) / 2;\n    const lambda2 = (trace - Math.sqrt(discriminant)) / 2;\n\n    // Calculate eigenvectors\n    const eigenvectors = [];\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    // For each eigenvalue, find a corresponding eigenvector\n    [lambda1, lambda2].forEach((lambda, index) => {\n      let vx, vy;\n      if (Math.abs(b) > 1e-10) {\n        vx = 1;\n        vy = (lambda - a) / b;\n      } else if (Math.abs(c) > 1e-10) {\n        vy = 1;\n        vx = (lambda - d) / c;\n      } else {\n        vx = 1;\n        vy = 0;\n      }\n\n      // Normalize the vector\n      const length = Math.sqrt(vx * vx + vy * vy);\n      vx /= length;\n      vy /= length;\n\n      eigenvectors.push(\n        <line\n          key={`eigenvector-${index}`}\n          x1={centerX}\n          y1={centerY}\n          x2={centerX + vx * scale * 2}\n          y2={centerY - vy * scale * 2}\n          stroke=\"#ffc107\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          className=\"eigenvector\"\n        />\n      );\n\n      eigenvectors.push(\n        <text\n          key={`eigenvector-label-${index}`}\n          x={centerX + vx * scale * 2 + 5}\n          y={centerY - vy * scale * 2 + 5}\n          fontSize=\"12\"\n          fill=\"#ffc107\"\n          fontWeight=\"bold\"\n        >\n          λ{index + 1} = {lambda.toFixed(2)}\n        </text>\n      );\n    });\n\n    return eigenvectors;\n  };\n\n  return (\n    <div className=\"visualizer-2d\">\n      <svg\n        ref={svgRef}\n        width={dimensions.width}\n        height={dimensions.height}\n        viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n        className=\"coordinate-grid\"\n      >\n        {renderGrid()}\n        {renderUnitSquare()}\n        {renderVectors()}\n        {renderEigenvectors()}\n      </svg>\n    </div>\n  );\n};\n\nexport default Visualizer2D;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}