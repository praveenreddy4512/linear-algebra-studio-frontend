{"ast":null,"code":"var _jsxFileName = \"/Users/saipraveenreddykolli/Desktop/lab2/linear-algebra-studio/frontend/src/components/Visualizer2D.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './Visualizer2D.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer2D = ({\n  matrix,\n  showEigenvectors = true\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({\n    width: 600,\n    height: 400\n  });\n  const [animationStep, setAnimationStep] = useState(0);\n  useEffect(() => {\n    const updateDimensions = () => {\n      var _svgRef$current;\n      const container = (_svgRef$current = svgRef.current) === null || _svgRef$current === void 0 ? void 0 : _svgRef$current.parentElement;\n      const fallbackWidth = Math.min(window.innerWidth - 60, 800);\n      const width = Math.max(320, ((container === null || container === void 0 ? void 0 : container.offsetWidth) || fallbackWidth) - 40);\n      const height = 400; // fixed height for consistent layout\n      setDimensions({\n        width,\n        height\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n  useEffect(() => {\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      setAnimationStep(0);\n      const timer = setTimeout(() => setAnimationStep(1), 100);\n      return () => clearTimeout(timer);\n    }\n  }, [matrix]);\n  const renderGrid = () => {\n    const {\n      width,\n      height\n    } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const gridSize = 20;\n    const gridExtent = Math.min(width, height) / 2 - 20;\n    const lines = [];\n\n    // Vertical lines\n    for (let i = -Math.floor(gridExtent / gridSize); i <= Math.floor(gridExtent / gridSize); i++) {\n      const x = centerX + i * gridSize;\n      if (x >= 0 && x <= width) {\n        lines.push(/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: x,\n          y1: centerY - gridExtent,\n          x2: x,\n          y2: centerY + gridExtent,\n          stroke: \"#e0e0e0\",\n          strokeWidth: i === 0 ? 2 : 1\n        }, `v-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this));\n      }\n    }\n\n    // Horizontal lines\n    for (let i = -Math.floor(gridExtent / gridSize); i <= Math.floor(gridExtent / gridSize); i++) {\n      const y = centerY + i * gridSize;\n      if (y >= 0 && y <= height) {\n        lines.push(/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: centerX - gridExtent,\n          y1: y,\n          x2: centerX + gridExtent,\n          y2: y,\n          stroke: \"#e0e0e0\",\n          strokeWidth: i === 0 ? 2 : 1\n        }, `h-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return lines;\n  };\n  const renderVectors = () => {\n    const {\n      width,\n      height\n    } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n    const vectors = [];\n\n    // Original basis vectors\n    vectors.push(/*#__PURE__*/_jsxDEV(\"line\", {\n      x1: centerX,\n      y1: centerY,\n      x2: centerX + scale,\n      y2: centerY,\n      stroke: \"#007bff\",\n      strokeWidth: \"3\",\n      strokeLinecap: \"round\",\n      className: \"vector-i\"\n    }, \"i-original\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this));\n    vectors.push(/*#__PURE__*/_jsxDEV(\"line\", {\n      x1: centerX,\n      y1: centerY,\n      x2: centerX,\n      y2: centerY - scale,\n      stroke: \"#dc3545\",\n      strokeWidth: \"3\",\n      strokeLinecap: \"round\",\n      className: \"vector-j\"\n    }, \"j-original\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this));\n\n    // Labels for original vectors\n    vectors.push(/*#__PURE__*/_jsxDEV(\"text\", {\n      x: centerX + scale + 5,\n      y: centerY + 5,\n      fontSize: \"12\",\n      fill: \"#007bff\",\n      fontWeight: \"bold\",\n      children: \"i\\u0302\"\n    }, \"i-label\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this));\n    vectors.push(/*#__PURE__*/_jsxDEV(\"text\", {\n      x: centerX + 5,\n      y: centerY - scale - 5,\n      fontSize: \"12\",\n      fill: \"#dc3545\",\n      fontWeight: \"bold\",\n      children: \"\\u0135\"\n    }, \"j-label\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this));\n\n    // Transformed vectors if matrix is provided\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      const transformedI = [matrix[0][0], matrix[1][0]];\n      const transformedJ = [matrix[0][1], matrix[1][1]];\n      vectors.push(/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: centerX,\n        y1: centerY,\n        x2: centerX + transformedI[0] * scale,\n        y2: centerY - transformedI[1] * scale,\n        stroke: \"#28a745\",\n        strokeWidth: \"3\",\n        strokeLinecap: \"round\",\n        strokeDasharray: \"5,5\",\n        className: \"vector-transformed\"\n      }, \"i-transformed\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this));\n      vectors.push(/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: centerX,\n        y1: centerY,\n        x2: centerX + transformedJ[0] * scale,\n        y2: centerY - transformedJ[1] * scale,\n        stroke: \"#28a745\",\n        strokeWidth: \"3\",\n        strokeLinecap: \"round\",\n        strokeDasharray: \"5,5\",\n        className: \"vector-transformed\"\n      }, \"j-transformed\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this));\n\n      // Labels for transformed vectors\n      vectors.push(/*#__PURE__*/_jsxDEV(\"text\", {\n        x: centerX + transformedI[0] * scale + 5,\n        y: centerY - transformedI[1] * scale + 5,\n        fontSize: \"12\",\n        fill: \"#28a745\",\n        fontWeight: \"bold\",\n        children: \"i\\u0302'\"\n      }, \"i-transformed-label\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this));\n      vectors.push(/*#__PURE__*/_jsxDEV(\"text\", {\n        x: centerX + transformedJ[0] * scale + 5,\n        y: centerY - transformedJ[1] * scale + 5,\n        fontSize: \"12\",\n        fill: \"#28a745\",\n        fontWeight: \"bold\",\n        children: \"\\u0135'\"\n      }, \"j-transformed-label\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this));\n    }\n    return vectors;\n  };\n  const renderUnitSquare = () => {\n    const {\n      width,\n      height\n    } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n    const squares = [];\n\n    // Original unit square\n    squares.push(/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: centerX,\n      y: centerY - scale,\n      width: scale,\n      height: scale,\n      fill: \"rgba(0,123,255,0.1)\",\n      stroke: \"#007bff\",\n      strokeWidth: \"2\",\n      className: \"unit-square\"\n    }, \"unit-square\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this));\n\n    // Transformed unit square if matrix is provided\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      const transformedI = [matrix[0][0], matrix[1][0]];\n      const transformedJ = [matrix[0][1], matrix[1][1]];\n\n      // Calculate transformed square vertices\n      const p1 = [centerX, centerY];\n      const p2 = [centerX + transformedI[0] * scale, centerY - transformedI[1] * scale];\n      const p3 = [centerX + transformedI[0] * scale + transformedJ[0] * scale, centerY - transformedI[1] * scale - transformedJ[1] * scale];\n      const p4 = [centerX + transformedJ[0] * scale, centerY - transformedJ[1] * scale];\n      squares.push(/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `${p1[0]},${p1[1]} ${p2[0]},${p2[1]} ${p3[0]},${p3[1]} ${p4[0]},${p4[1]}`,\n        fill: \"rgba(40,167,69,0.1)\",\n        stroke: \"#28a745\",\n        strokeWidth: \"2\",\n        className: \"unit-square-transformed\"\n      }, \"transformed-square\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this));\n    }\n    return squares;\n  };\n  const renderEigenvectors = () => {\n    if (!showEigenvectors || !matrix || matrix.length !== 2 || matrix[0].length !== 2) {\n      return null;\n    }\n\n    // Calculate eigenvalues and eigenvectors\n    const a = matrix[0][0];\n    const b = matrix[0][1];\n    const c = matrix[1][0];\n    const d = matrix[1][1];\n    const trace = a + d;\n    const det = a * d - b * c;\n    const discriminant = trace * trace - 4 * det;\n    if (discriminant < 0) {\n      return null; // Complex eigenvalues\n    }\n    const lambda1 = (trace + Math.sqrt(discriminant)) / 2;\n    const lambda2 = (trace - Math.sqrt(discriminant)) / 2;\n\n    // Calculate eigenvectors\n    const eigenvectors = [];\n    const {\n      width,\n      height\n    } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    // For each eigenvalue, find a corresponding eigenvector\n    [lambda1, lambda2].forEach((lambda, index) => {\n      let vx, vy;\n      if (Math.abs(b) > 1e-10) {\n        vx = 1;\n        vy = (lambda - a) / b;\n      } else if (Math.abs(c) > 1e-10) {\n        vy = 1;\n        vx = (lambda - d) / c;\n      } else {\n        vx = 1;\n        vy = 0;\n      }\n\n      // Normalize the vector\n      const length = Math.sqrt(vx * vx + vy * vy);\n      vx /= length;\n      vy /= length;\n      eigenvectors.push(/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: centerX,\n        y1: centerY,\n        x2: centerX + vx * scale * 2,\n        y2: centerY - vy * scale * 2,\n        stroke: \"#ffc107\",\n        strokeWidth: \"4\",\n        strokeLinecap: \"round\",\n        className: \"eigenvector\"\n      }, `eigenvector-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this));\n      eigenvectors.push(/*#__PURE__*/_jsxDEV(\"text\", {\n        x: centerX + vx * scale * 2 + 5,\n        y: centerY - vy * scale * 2 + 5,\n        fontSize: \"12\",\n        fill: \"#ffc107\",\n        fontWeight: \"bold\",\n        children: [\"\\u03BB\", index + 1, \" = \", lambda.toFixed(2)]\n      }, `eigenvector-label-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this));\n    });\n    return eigenvectors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visualizer-2d\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: dimensions.width,\n      height: dimensions.height,\n      viewBox: `0 0 ${dimensions.width} ${dimensions.height}`,\n      className: \"coordinate-grid\",\n      children: [renderGrid(), renderUnitSquare(), renderVectors(), renderEigenvectors()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualizer2D, \"uET/sP+tPKr8ym4Pl/szcV8z1no=\");\n_c = Visualizer2D;\nexport default Visualizer2D;\nvar _c;\n$RefreshReg$(_c, \"Visualizer2D\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Visualizer2D","matrix","showEigenvectors","_s","svgRef","dimensions","setDimensions","width","height","animationStep","setAnimationStep","updateDimensions","_svgRef$current","container","current","parentElement","fallbackWidth","Math","min","window","innerWidth","max","offsetWidth","addEventListener","removeEventListener","length","timer","setTimeout","clearTimeout","renderGrid","centerX","centerY","gridSize","gridExtent","lines","i","floor","x","push","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","y","renderVectors","scale","vectors","strokeLinecap","className","fontSize","fill","fontWeight","children","transformedI","transformedJ","strokeDasharray","renderUnitSquare","squares","p1","p2","p3","p4","points","renderEigenvectors","a","b","c","d","trace","det","discriminant","lambda1","sqrt","lambda2","eigenvectors","forEach","lambda","index","vx","vy","abs","toFixed","ref","viewBox","_c","$RefreshReg$"],"sources":["/Users/saipraveenreddykolli/Desktop/lab2/linear-algebra-studio/frontend/src/components/Visualizer2D.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './Visualizer2D.css';\n\nconst Visualizer2D = ({ matrix, showEigenvectors = true }) => {\n  const svgRef = useRef(null);\n  const [dimensions, setDimensions] = useState({ width: 600, height: 400 });\n  const [animationStep, setAnimationStep] = useState(0);\n\n  useEffect(() => {\n    const updateDimensions = () => {\n      const container = svgRef.current?.parentElement;\n      const fallbackWidth = Math.min(window.innerWidth - 60, 800);\n      const width = Math.max(320, (container?.offsetWidth || fallbackWidth) - 40);\n      const height = 400; // fixed height for consistent layout\n      setDimensions({ width, height });\n    };\n\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  useEffect(() => {\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      setAnimationStep(0);\n      const timer = setTimeout(() => setAnimationStep(1), 100);\n      return () => clearTimeout(timer);\n    }\n  }, [matrix]);\n\n  const renderGrid = () => {\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const gridSize = 20;\n    const gridExtent = Math.min(width, height) / 2 - 20;\n\n    const lines = [];\n    \n    // Vertical lines\n    for (let i = -Math.floor(gridExtent / gridSize); i <= Math.floor(gridExtent / gridSize); i++) {\n      const x = centerX + i * gridSize;\n      if (x >= 0 && x <= width) {\n        lines.push(\n          <line\n            key={`v-${i}`}\n            x1={x}\n            y1={centerY - gridExtent}\n            x2={x}\n            y2={centerY + gridExtent}\n            stroke=\"#e0e0e0\"\n            strokeWidth={i === 0 ? 2 : 1}\n          />\n        );\n      }\n    }\n\n    // Horizontal lines\n    for (let i = -Math.floor(gridExtent / gridSize); i <= Math.floor(gridExtent / gridSize); i++) {\n      const y = centerY + i * gridSize;\n      if (y >= 0 && y <= height) {\n        lines.push(\n          <line\n            key={`h-${i}`}\n            x1={centerX - gridExtent}\n            y1={y}\n            x2={centerX + gridExtent}\n            y2={y}\n            stroke=\"#e0e0e0\"\n            strokeWidth={i === 0 ? 2 : 1}\n          />\n        );\n      }\n    }\n\n    return lines;\n  };\n\n  const renderVectors = () => {\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    const vectors = [];\n\n    // Original basis vectors\n    vectors.push(\n      <line\n        key=\"i-original\"\n        x1={centerX}\n        y1={centerY}\n        x2={centerX + scale}\n        y2={centerY}\n        stroke=\"#007bff\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        className=\"vector-i\"\n      />\n    );\n    vectors.push(\n      <line\n        key=\"j-original\"\n        x1={centerX}\n        y1={centerY}\n        x2={centerX}\n        y2={centerY - scale}\n        stroke=\"#dc3545\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        className=\"vector-j\"\n      />\n    );\n\n    // Labels for original vectors\n    vectors.push(\n      <text\n        key=\"i-label\"\n        x={centerX + scale + 5}\n        y={centerY + 5}\n        fontSize=\"12\"\n        fill=\"#007bff\"\n        fontWeight=\"bold\"\n      >\n        î\n      </text>\n    );\n    vectors.push(\n      <text\n        key=\"j-label\"\n        x={centerX + 5}\n        y={centerY - scale - 5}\n        fontSize=\"12\"\n        fill=\"#dc3545\"\n        fontWeight=\"bold\"\n      >\n        ĵ\n      </text>\n    );\n\n    // Transformed vectors if matrix is provided\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      const transformedI = [matrix[0][0], matrix[1][0]];\n      const transformedJ = [matrix[0][1], matrix[1][1]];\n\n      vectors.push(\n        <line\n          key=\"i-transformed\"\n          x1={centerX}\n          y1={centerY}\n          x2={centerX + transformedI[0] * scale}\n          y2={centerY - transformedI[1] * scale}\n          stroke=\"#28a745\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          strokeDasharray=\"5,5\"\n          className=\"vector-transformed\"\n        />\n      );\n      vectors.push(\n        <line\n          key=\"j-transformed\"\n          x1={centerX}\n          y1={centerY}\n          x2={centerX + transformedJ[0] * scale}\n          y2={centerY - transformedJ[1] * scale}\n          stroke=\"#28a745\"\n          strokeWidth=\"3\"\n          strokeLinecap=\"round\"\n          strokeDasharray=\"5,5\"\n          className=\"vector-transformed\"\n        />\n      );\n\n      // Labels for transformed vectors\n      vectors.push(\n        <text\n          key=\"i-transformed-label\"\n          x={centerX + transformedI[0] * scale + 5}\n          y={centerY - transformedI[1] * scale + 5}\n          fontSize=\"12\"\n          fill=\"#28a745\"\n          fontWeight=\"bold\"\n        >\n          î'\n        </text>\n      );\n      vectors.push(\n        <text\n          key=\"j-transformed-label\"\n          x={centerX + transformedJ[0] * scale + 5}\n          y={centerY - transformedJ[1] * scale + 5}\n          fontSize=\"12\"\n          fill=\"#28a745\"\n          fontWeight=\"bold\"\n        >\n          ĵ'\n        </text>\n      );\n    }\n\n    return vectors;\n  };\n\n  const renderUnitSquare = () => {\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    const squares = [];\n\n    // Original unit square\n    squares.push(\n      <rect\n        key=\"unit-square\"\n        x={centerX}\n        y={centerY - scale}\n        width={scale}\n        height={scale}\n        fill=\"rgba(0,123,255,0.1)\"\n        stroke=\"#007bff\"\n        strokeWidth=\"2\"\n        className=\"unit-square\"\n      />\n    );\n\n    // Transformed unit square if matrix is provided\n    if (matrix && matrix.length === 2 && matrix[0].length === 2) {\n      const transformedI = [matrix[0][0], matrix[1][0]];\n      const transformedJ = [matrix[0][1], matrix[1][1]];\n\n      // Calculate transformed square vertices\n      const p1 = [centerX, centerY];\n      const p2 = [centerX + transformedI[0] * scale, centerY - transformedI[1] * scale];\n      const p3 = [centerX + transformedI[0] * scale + transformedJ[0] * scale, \n                  centerY - transformedI[1] * scale - transformedJ[1] * scale];\n      const p4 = [centerX + transformedJ[0] * scale, centerY - transformedJ[1] * scale];\n\n      squares.push(\n        <polygon\n          key=\"transformed-square\"\n          points={`${p1[0]},${p1[1]} ${p2[0]},${p2[1]} ${p3[0]},${p3[1]} ${p4[0]},${p4[1]}`}\n          fill=\"rgba(40,167,69,0.1)\"\n          stroke=\"#28a745\"\n          strokeWidth=\"2\"\n          className=\"unit-square-transformed\"\n        />\n      );\n    }\n\n    return squares;\n  };\n\n  const renderEigenvectors = () => {\n    if (!showEigenvectors || !matrix || matrix.length !== 2 || matrix[0].length !== 2) {\n      return null;\n    }\n\n    // Calculate eigenvalues and eigenvectors\n    const a = matrix[0][0];\n    const b = matrix[0][1];\n    const c = matrix[1][0];\n    const d = matrix[1][1];\n\n    const trace = a + d;\n    const det = a * d - b * c;\n    const discriminant = trace * trace - 4 * det;\n\n    if (discriminant < 0) {\n      return null; // Complex eigenvalues\n    }\n\n    const lambda1 = (trace + Math.sqrt(discriminant)) / 2;\n    const lambda2 = (trace - Math.sqrt(discriminant)) / 2;\n\n    // Calculate eigenvectors\n    const eigenvectors = [];\n    const { width, height } = dimensions;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const scale = 30;\n\n    // For each eigenvalue, find a corresponding eigenvector\n    [lambda1, lambda2].forEach((lambda, index) => {\n      let vx, vy;\n      if (Math.abs(b) > 1e-10) {\n        vx = 1;\n        vy = (lambda - a) / b;\n      } else if (Math.abs(c) > 1e-10) {\n        vy = 1;\n        vx = (lambda - d) / c;\n      } else {\n        vx = 1;\n        vy = 0;\n      }\n\n      // Normalize the vector\n      const length = Math.sqrt(vx * vx + vy * vy);\n      vx /= length;\n      vy /= length;\n\n      eigenvectors.push(\n        <line\n          key={`eigenvector-${index}`}\n          x1={centerX}\n          y1={centerY}\n          x2={centerX + vx * scale * 2}\n          y2={centerY - vy * scale * 2}\n          stroke=\"#ffc107\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          className=\"eigenvector\"\n        />\n      );\n\n      eigenvectors.push(\n        <text\n          key={`eigenvector-label-${index}`}\n          x={centerX + vx * scale * 2 + 5}\n          y={centerY - vy * scale * 2 + 5}\n          fontSize=\"12\"\n          fill=\"#ffc107\"\n          fontWeight=\"bold\"\n        >\n          λ{index + 1} = {lambda.toFixed(2)}\n        </text>\n      );\n    });\n\n    return eigenvectors;\n  };\n\n  return (\n    <div className=\"visualizer-2d\">\n      <svg\n        ref={svgRef}\n        width={dimensions.width}\n        height={dimensions.height}\n        viewBox={`0 0 ${dimensions.width} ${dimensions.height}`}\n        className=\"coordinate-grid\"\n      >\n        {renderGrid()}\n        {renderUnitSquare()}\n        {renderVectors()}\n        {renderEigenvectors()}\n      </svg>\n    </div>\n  );\n};\n\nexport default Visualizer2D;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}