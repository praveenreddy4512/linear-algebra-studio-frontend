{"ast":null,"code":"import React,{useState}from'react';import MatrixInput from'../components/MatrixInput';import ResultDisplay from'../components/ResultDisplay';import SvdDemoControls from'../components/SvdDemoControls';import Visualizer2D from'../components/Visualizer2D';import{computeMatrix,saveProject}from'../services/api';import'./SvdDemo.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SvdDemo=()=>{const[matrix,setMatrix]=useState([[1,0],[0,1]]);const[result,setResult]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[animationStep,setAnimationStep]=useState(0);const handleCompute=async()=>{setIsLoading(true);setError(null);setResult(null);try{const data=await computeMatrix('svd',{matrix});setResult(data.result);}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'An error occurred while computing SVD');}finally{setIsLoading(false);}};const handleSaveProject=async()=>{if(!result)return;try{const projectData={name:\"SVD Analysis - 2\\xD72\",matrixData:{matrix},operation:'svd',result};await saveProject(projectData);alert('Project saved successfully!');}catch(err){var _err$response2,_err$response2$data;alert('Failed to save project: '+(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||'Unknown error'));}};const getCurrentTransformMatrix=()=>{if(!result)return matrix;const{U,S,V}=result;switch(animationStep){case 0:// Original\nreturn matrix;case 1:// U rotation\nreturn U;case 2:// Σ scaling\nreturn[[S[0],0],[0,S[1]]];case 3:// Vᵀ rotation\nreturn[[V[0][0],V[1][0]],[V[0][1],V[1][1]]];case 4:// Final transform\ntry{const sigma=[[S[0],0],[0,S[1]]];const vT=[[V[0][0],V[1][0]],[V[0][1],V[1][1]]];const us=[[U[0][0]*sigma[0][0]+U[0][1]*sigma[1][0],U[0][0]*sigma[0][1]+U[0][1]*sigma[1][1]],[U[1][0]*sigma[0][0]+U[1][1]*sigma[1][0],U[1][0]*sigma[0][1]+U[1][1]*sigma[1][1]]];const a=[[us[0][0]*vT[0][0]+us[0][1]*vT[1][0],us[0][0]*vT[0][1]+us[0][1]*vT[1][1]],[us[1][0]*vT[0][0]+us[1][1]*vT[1][0],us[1][0]*vT[0][1]+us[1][1]*vT[1][1]]];return a;}catch(e){return matrix;}default:return matrix;}};const getAnimationExplanation=()=>{const explanations=[{title:\"Original Matrix\",description:\"The input 2×2 matrix that we want to decompose using SVD.\",formula:\"A\"},{title:\"U Rotation\",description:\"First rotation matrix U from the SVD decomposition. This rotates the coordinate system.\",formula:\"U\"},{title:\"Σ Scaling\",description:\"Diagonal matrix of singular values. This scales along the principal axes.\",formula:\"Σ\"},{title:\"Vᵀ Rotation\",description:\"Second rotation matrix Vᵀ from the SVD decomposition. This performs the final rotation.\",formula:\"Vᵀ\"},{title:\"Final Transform\",description:\"The complete transformation A = UΣVᵀ applied to the unit square.\",formula:\"A = UΣVᵀ\"}];return explanations[animationStep]||explanations[0];};const getSvdTheory=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"svd-theory\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Singular Value Decomposition (SVD) Theory\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"theory-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"theory-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"What is SVD?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"SVD decomposes any matrix A into three matrices: A = U\\u03A3V\\u1D40, where:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"U:\"}),\" Orthogonal matrix (rotation/reflection)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u03A3:\"}),\" Diagonal matrix of singular values (scaling)\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"V:\"}),\" Orthogonal matrix (rotation/reflection)\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"theory-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Geometric Interpretation\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Any linear transformation can be decomposed into:\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Rotation/reflection (V\\u1D40)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Scaling along principal axes (\\u03A3)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Rotation/reflection (U)\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"theory-item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Applications\"}),/*#__PURE__*/_jsx(\"p\",{children:\"SVD is fundamental in many applications including:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Principal Component Analysis (PCA)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Data compression and dimensionality reduction\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Image processing and computer vision\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Solving least squares problems\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Recommendation systems\"})]})]})]})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"svd-demo\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Interactive SVD Visualization\"}),/*#__PURE__*/_jsx(\"p\",{className:\"page-description\",children:\"Explore Singular Value Decomposition (SVD) through an interactive visualization. See how matrices transform space through rotation, scaling, and rotation steps.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"matrix-input-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Matrix Input\"}),/*#__PURE__*/_jsx(\"div\",{className:\"matrix-input-wrapper\",children:/*#__PURE__*/_jsx(MatrixInput,{matrix:matrix,onChange:setMatrix,size:2,label:\"Enter your 2\\xD72 matrix values\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"matrix-presets\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"preset-button identity\",onClick:()=>setMatrix([[1,0],[0,1]]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"preset-icon\",children:\"I\"}),/*#__PURE__*/_jsx(\"span\",{className:\"preset-label\",children:\"Identity Matrix\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"preset-button scaling\",onClick:()=>setMatrix([[2,0],[0,2]]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"preset-icon\",children:\"S\"}),/*#__PURE__*/_jsx(\"span\",{className:\"preset-label\",children:\"Scaling Matrix\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"preset-button rotation\",onClick:()=>setMatrix([[0,-1],[1,0]]),children:[/*#__PURE__*/_jsx(\"span\",{className:\"preset-icon\",children:\"R\"}),/*#__PURE__*/_jsx(\"span\",{className:\"preset-label\",children:\"Rotation Matrix\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"compute-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"control-button primary\",onClick:handleCompute,disabled:isLoading,children:isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"button-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Computing SVD...\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"button-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:\"\\u25B6\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Compute SVD\"})]})}),result&&/*#__PURE__*/_jsx(\"button\",{className:\"control-button save\",onClick:handleSaveProject,children:/*#__PURE__*/_jsxs(\"div\",{className:\"button-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon\",children:\"\\uD83D\\uDCBE\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Save Project\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"result-section\",children:/*#__PURE__*/_jsx(ResultDisplay,{result:result,operation:\"svd\",isLoading:isLoading,error:error})}),result&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"SVD Transformation Visualization\"}),/*#__PURE__*/_jsx(\"p\",{className:\"visualization-subtitle\",children:\"Watch how your matrix transforms space through each step of SVD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-layout\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"visualizer-container\",children:[/*#__PURE__*/_jsx(Visualizer2D,{matrix:getCurrentTransformMatrix(),showEigenvectors:false}),/*#__PURE__*/_jsx(\"div\",{className:\"step-indicator\",children:[0,1,2,3,4].map(step=>/*#__PURE__*/_jsx(\"div\",{className:\"step-dot \".concat(animationStep===step?'active':''),title:getAnimationExplanation().title},step))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"matrix-display-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Current Transformation Matrix:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"matrix-display\",children:getCurrentTransformMatrix().map((row,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"matrix-row\",children:row.map((cell,j)=>/*#__PURE__*/_jsx(\"span\",{className:\"matrix-cell\",children:typeof cell==='number'?cell.toFixed(3):cell},j))},i))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"animation-details\",children:[/*#__PURE__*/_jsx(\"h4\",{children:getAnimationExplanation().title}),/*#__PURE__*/_jsx(\"p\",{children:getAnimationExplanation().description}),/*#__PURE__*/_jsx(\"div\",{className:\"formula-display\",children:getAnimationExplanation().formula})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"controls-sidebar\",children:/*#__PURE__*/_jsx(SvdDemoControls,{matrix:matrix,onMatrixChange:setMatrix,onAnimate:setAnimationStep,currentStep:animationStep})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"theory-section\",children:getSvdTheory()})]})]})});};export default SvdDemo;","map":{"version":3,"names":["React","useState","MatrixInput","ResultDisplay","SvdDemoControls","Visualizer2D","computeMatrix","saveProject","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SvdDemo","matrix","setMatrix","result","setResult","isLoading","setIsLoading","error","setError","animationStep","setAnimationStep","handleCompute","data","err","_err$response","_err$response$data","response","handleSaveProject","projectData","name","matrixData","operation","alert","_err$response2","_err$response2$data","getCurrentTransformMatrix","U","S","V","sigma","vT","us","a","e","getAnimationExplanation","explanations","title","description","formula","getSvdTheory","className","children","onChange","size","label","onClick","disabled","showEigenvectors","map","step","concat","row","i","cell","j","toFixed","onMatrixChange","onAnimate","currentStep"],"sources":["/Users/saipraveenreddykolli/Desktop/lab2/linear-algebra-studio-frontend/src/pages/SvdDemo.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MatrixInput from '../components/MatrixInput';\nimport ResultDisplay from '../components/ResultDisplay';\nimport SvdDemoControls from '../components/SvdDemoControls';\nimport Visualizer2D from '../components/Visualizer2D';\nimport { computeMatrix, saveProject } from '../services/api';\nimport './SvdDemo.css';\n\nconst SvdDemo = () => {\n  const [matrix, setMatrix] = useState([[1, 0], [0, 1]]);\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [animationStep, setAnimationStep] = useState(0);\n\n  const handleCompute = async () => {\n    setIsLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      const data = await computeMatrix('svd', { matrix });\n      setResult(data.result);\n    } catch (err) {\n      setError(err.response?.data?.error || 'An error occurred while computing SVD');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSaveProject = async () => {\n    if (!result) return;\n\n    try {\n      const projectData = {\n        name: `SVD Analysis - 2×2`,\n        matrixData: { matrix },\n        operation: 'svd',\n        result\n      };\n\n      await saveProject(projectData);\n      alert('Project saved successfully!');\n    } catch (err) {\n      alert('Failed to save project: ' + (err.response?.data?.error || 'Unknown error'));\n    }\n  };\n\n  const getCurrentTransformMatrix = () => {\n    if (!result) return matrix;\n\n    const { U, S, V } = result;\n    \n    switch (animationStep) {\n      case 0: // Original\n        return matrix;\n      case 1: // U rotation\n        return U;\n      case 2: // Σ scaling\n        return [[S[0], 0], [0, S[1]]];\n      case 3: // Vᵀ rotation\n        return [[V[0][0], V[1][0]], [V[0][1], V[1][1]]];\n      case 4: // Final transform\n        try {\n          const sigma = [[S[0], 0], [0, S[1]]];\n          const vT = [[V[0][0], V[1][0]], [V[0][1], V[1][1]]];\n          const us = [\n            [U[0][0]*sigma[0][0] + U[0][1]*sigma[1][0], U[0][0]*sigma[0][1] + U[0][1]*sigma[1][1]],\n            [U[1][0]*sigma[0][0] + U[1][1]*sigma[1][0], U[1][0]*sigma[0][1] + U[1][1]*sigma[1][1]]\n          ];\n          const a = [\n            [us[0][0]*vT[0][0] + us[0][1]*vT[1][0], us[0][0]*vT[0][1] + us[0][1]*vT[1][1]],\n            [us[1][0]*vT[0][0] + us[1][1]*vT[1][0], us[1][0]*vT[0][1] + us[1][1]*vT[1][1]]\n          ];\n          return a;\n        } catch (e) {\n          return matrix;\n        }\n      default:\n        return matrix;\n    }\n  };\n\n  const getAnimationExplanation = () => {\n    const explanations = [\n      {\n        title: \"Original Matrix\",\n        description: \"The input 2×2 matrix that we want to decompose using SVD.\",\n        formula: \"A\"\n      },\n      {\n        title: \"U Rotation\",\n        description: \"First rotation matrix U from the SVD decomposition. This rotates the coordinate system.\",\n        formula: \"U\"\n      },\n      {\n        title: \"Σ Scaling\",\n        description: \"Diagonal matrix of singular values. This scales along the principal axes.\",\n        formula: \"Σ\"\n      },\n      {\n        title: \"Vᵀ Rotation\",\n        description: \"Second rotation matrix Vᵀ from the SVD decomposition. This performs the final rotation.\",\n        formula: \"Vᵀ\"\n      },\n      {\n        title: \"Final Transform\",\n        description: \"The complete transformation A = UΣVᵀ applied to the unit square.\",\n        formula: \"A = UΣVᵀ\"\n      }\n    ];\n\n    return explanations[animationStep] || explanations[0];\n  };\n\n  const getSvdTheory = () => {\n    return (\n      <div className=\"svd-theory\">\n        <h3>Singular Value Decomposition (SVD) Theory</h3>\n        <div className=\"theory-content\">\n          <div className=\"theory-item\">\n            <h4>What is SVD?</h4>\n            <p>\n              SVD decomposes any matrix A into three matrices: A = UΣVᵀ, where:\n            </p>\n            <ul>\n              <li><strong>U:</strong> Orthogonal matrix (rotation/reflection)</li>\n              <li><strong>Σ:</strong> Diagonal matrix of singular values (scaling)</li>\n              <li><strong>V:</strong> Orthogonal matrix (rotation/reflection)</li>\n            </ul>\n          </div>\n          \n          <div className=\"theory-item\">\n            <h4>Geometric Interpretation</h4>\n            <p>\n              Any linear transformation can be decomposed into:\n            </p>\n            <ol>\n              <li>Rotation/reflection (Vᵀ)</li>\n              <li>Scaling along principal axes (Σ)</li>\n              <li>Rotation/reflection (U)</li>\n            </ol>\n          </div>\n          \n          <div className=\"theory-item\">\n            <h4>Applications</h4>\n            <p>\n              SVD is fundamental in many applications including:\n            </p>\n            <ul>\n              <li>Principal Component Analysis (PCA)</li>\n              <li>Data compression and dimensionality reduction</li>\n              <li>Image processing and computer vision</li>\n              <li>Solving least squares problems</li>\n              <li>Recommendation systems</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"svd-demo\">\n      <div className=\"container\">\n        <div className=\"page-header\">\n          <h1>Interactive SVD Visualization</h1>\n          <p className=\"page-description\">\n            Explore Singular Value Decomposition (SVD) through an interactive visualization.\n            See how matrices transform space through rotation, scaling, and rotation steps.\n          </p>\n        </div>\n\n        <div className=\"matrix-input-section\">\n          <h2>Matrix Input</h2>\n          <div className=\"matrix-input-wrapper\">\n            <MatrixInput\n              matrix={matrix}\n              onChange={setMatrix}\n              size={2}\n              label=\"Enter your 2×2 matrix values\"\n            />\n          </div>\n          <div className=\"matrix-presets\">\n            <button className=\"preset-button identity\" onClick={() => setMatrix([[1, 0], [0, 1]])}>\n              <span className=\"preset-icon\">I</span>\n              <span className=\"preset-label\">Identity Matrix</span>\n            </button>\n            <button className=\"preset-button scaling\" onClick={() => setMatrix([[2, 0], [0, 2]])}>\n              <span className=\"preset-icon\">S</span>\n              <span className=\"preset-label\">Scaling Matrix</span>\n            </button>\n            <button className=\"preset-button rotation\" onClick={() => setMatrix([[0, -1], [1, 0]])}>\n              <span className=\"preset-icon\">R</span>\n              <span className=\"preset-label\">Rotation Matrix</span>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"compute-section\">\n          <button \n            className=\"control-button primary\"\n            onClick={handleCompute}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <div className=\"button-content\">\n                <span className=\"loading-spinner\"></span>\n                <span>Computing SVD...</span>\n              </div>\n            ) : (\n              <div className=\"button-content\">\n                <span className=\"icon\">▶</span>\n                <span>Compute SVD</span>\n              </div>\n            )}\n          </button>\n          \n          {result && (\n            <button \n              className=\"control-button save\"\n              onClick={handleSaveProject}\n            >\n              <div className=\"button-content\">\n                <span className=\"icon\">💾</span>\n                <span>Save Project</span>\n              </div>\n            </button>\n          )}\n        </div>\n\n        <div className=\"result-section\">\n          <ResultDisplay\n            result={result}\n            operation=\"svd\"\n            isLoading={isLoading}\n            error={error}\n          />\n        </div>\n\n        {result && (\n          <>\n            <div className=\"visualization-section\">\n              <div className=\"visualization-header\">\n                <h3>SVD Transformation Visualization</h3>\n                <p className=\"visualization-subtitle\">\n                  Watch how your matrix transforms space through each step of SVD\n                </p>\n              </div>\n              \n              <div className=\"visualization-layout\">\n                <div className=\"visualization-main\">\n                  <div className=\"visualizer-container\">\n                    <Visualizer2D \n                      matrix={getCurrentTransformMatrix()} \n                      showEigenvectors={false}\n                    />\n                    <div className=\"step-indicator\">\n                      {[0, 1, 2, 3, 4].map(step => (\n                        <div \n                          key={step} \n                          className={`step-dot ${animationStep === step ? 'active' : ''}`}\n                          title={getAnimationExplanation().title}\n                        />\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"matrix-display-section\">\n                    <h4>Current Transformation Matrix:</h4>\n                    <div className=\"matrix-display\">\n                      {getCurrentTransformMatrix().map((row, i) => (\n                        <div key={i} className=\"matrix-row\">\n                          {row.map((cell, j) => (\n                            <span key={j} className=\"matrix-cell\">\n                              {typeof cell === 'number' ? cell.toFixed(3) : cell}\n                            </span>\n                          ))}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"animation-details\">\n                    <h4>{getAnimationExplanation().title}</h4>\n                    <p>{getAnimationExplanation().description}</p>\n                    <div className=\"formula-display\">\n                      {getAnimationExplanation().formula}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"controls-sidebar\">\n                  <SvdDemoControls\n                    matrix={matrix}\n                    onMatrixChange={setMatrix}\n                    onAnimate={setAnimationStep}\n                    currentStep={animationStep}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"theory-section\">\n              {getSvdTheory()}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SvdDemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}